"use client";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import {
  MenuFoldOutlined,
  MenuUnfoldOutlined,
  LogoutOutlined,
  HomeOutlined,
  BookOutlined,
  MoneyCollectOutlined,
} from "@ant-design/icons";
import { Layout, Menu, Button, theme, Typography } from "antd";
import { Authenticator } from "@aws-amplify/ui-react";
import "@aws-amplify/ui-react/styles.css";
import { getJwtToken } from "./utils";
import Link from "next/link";
import { Amplify } from "aws-amplify";
import awsExports from "./aws-exports";

const { Header, Sider, Content } = Layout;
const { Text } = Typography;
const inter = Inter({ subsets: ["latin"] });
// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

// Configure Amplify in index file or root file
Amplify.configure({
  Auth: {
    region: awsExports.REGION,
    userPoolId: awsExports.USER_POOL_ID,
    userPoolWebClientId: awsExports.USER_POOL_APP_CLIENT_ID,
  },
});

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [collapsed, setCollapsed] = useState(false);
  const [token, setToken] = useState("");

  const {
    token: { colorBgContainer },
  } = theme.useToken();

  useEffect(() => {
    async function getToken() {
      const jwtToken = await getJwtToken();
      if (jwtToken) {
        setToken(jwtToken);
      }
    }
    if (!token) {
      getToken();
    }
  }, []);

  return (
    <html lang="en">
      <body className={inter.className}>
        <Authenticator signUpAttributes={["email"]}>
          {({ signOut, user }) => {
            return (
              <Layout style={{ height: "100vh" }}>
                <Sider trigger={null} collapsible collapsed={collapsed}>
                  <div className="demo-logo-vertical" />
                  <Menu
                    theme="dark"
                    mode="inline"
                    defaultSelectedKeys={["1"]}
                    items={[
                      {
                        key: "1",
                        icon: <HomeOutlined />,
                        label: <Link href="/"> Home </Link>,
                      },
                      {
                        key: "2",
                        icon: <BookOutlined />,
                        label: <Link href="/booking"> Booking </Link>,
                      },
                      {
                        key: "3",
                        icon: <MoneyCollectOutlined />,
                        label: <Link href="/bill"> Bill </Link>,
                      },
                      {
                        key: "4",
                        icon: <MoneyCollectOutlined />,
                        label: <Link href="/admin"> Admin </Link>,
                      },
                      {
                        key: "5",
                        icon: <LogoutOutlined />,
                        label: "sign out",
                        danger: true,
                        onClick: signOut,
                      },
                    ]}
                  ></Menu>
                </Sider>
                <Layout>
                  <Header style={{ padding: 0, background: colorBgContainer }}>
                    <Button
                      type="text"
                      icon={
                        collapsed ? (
                          <MenuUnfoldOutlined />
                        ) : (
                          <MenuFoldOutlined />
                        )
                      }
                      onClick={() => setCollapsed(!collapsed)}
                      style={{
                        fontSize: "16px",
                        width: 64,
                        height: 64,
                      }}
                    />
                    <Text type="secondary"> Welcome, {user?.username}! </Text>
                  </Header>
                  <Content
                    style={{
                      margin: "24px 16px",
                      padding: 24,
                      background: colorBgContainer,
                      overflow: "auto",
                    }}
                  >
                    {children}
                  </Content>
                </Layout>
              </Layout>
            );
          }}
        </Authenticator>
      </body>
    </html>
  );
}
